generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  resetTokens PasswordResetToken[]
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Product {
  id            Int          @id @default(autoincrement())
  name          String
  description   String?
  price         Float
  stock         Int
  imageUrl      String?
  stripeProductId String?
  stripePriceId   String?
  size          String?      // Tamanho (ex.: "P, M, G" ou "38, 39, 40")
  material      String?      // Material (ex.: "Couro, Camur√ßa")
  type          String?      // Tipo (ex.: "Casual, Esportivo")
  about         String?      // Sobre o produto (detalhes adicionais)
  warranty      String?      // Garantia (ex.: "1 ano contra defeitos")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  orderItems    OrderItem[]
}

model Order {
  id          Int          @id @default(autoincrement())
  userId      Int
  user        User         @relation(fields: [userId], references: [id])
  total       Float
  status      OrderStatus  @default(PENDING)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  orderItems  OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}